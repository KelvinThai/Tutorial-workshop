/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FLPCrowdSale,
  FLPCrowdSaleInterface,
} from "../../../contracts/FLPCrowndsale.sol/FLPCrowdSale";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bnb_rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usdt_rate",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "icotoken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BuyTokenByBNB",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BuyTokenByUSDT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "SetBNBRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "SetUSDTRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "SetUSDTToken",
    type: "event",
  },
  {
    inputs: [],
    name: "BNB_rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDT_rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_wallet",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyTokenByBNB",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "USDTAmount",
        type: "uint256",
      },
    ],
    name: "buyTokenByUSDT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "BNBAmount",
        type: "uint256",
      },
    ],
    name: "getTokenAmountBNB",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "USDTAmount",
        type: "uint256",
      },
    ],
    name: "getTokenAmountUSDT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "new_rate",
        type: "uint256",
      },
    ],
    name: "setBNBRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "new_rate",
        type: "uint256",
      },
    ],
    name: "setUSDTRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_address",
        type: "address",
      },
    ],
    name: "setUSDTToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdtToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawErc20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002000380380620020008339818101604052810190620000379190620002bb565b620000576200004b620000f160201b60201c565b620000f960201b60201c565b836002819055508260038190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506200032d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b620001d781620001c2565b8114620001e357600080fd5b50565b600081519050620001f781620001cc565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200022a82620001fd565b9050919050565b6200023c816200021d565b81146200024857600080fd5b50565b6000815190506200025c8162000231565b92915050565b60006200026f82620001fd565b9050919050565b6000620002838262000262565b9050919050565b620002958162000276565b8114620002a157600080fd5b50565b600081519050620002b5816200028a565b92915050565b60008060008060808587031215620002d857620002d7620001bd565b5b6000620002e887828801620001e6565b9450506020620002fb87828801620001e6565b93505060406200030e878288016200024b565b92505060606200032187828801620002a4565b91505092959194509250565b611cc3806200033d6000396000f3fe6080604052600436106100fe5760003560e01c8063610757e411610095578063a98ad46c11610064578063a98ad46c146102b6578063acb03d43146102e1578063c5d156511461031e578063f2fde38b14610347578063fc0c546a14610370576100fe565b8063610757e41461022057806366e226bd1461024b578063715018a6146102745780638da5cb5b1461028b576100fe565b806331927737116100d157806331927737146101bd5780633ccfd60b146101c75780633e3f2359146101de578063592a00e4146101f5576100fe565b8063157fc821146101035780631832d8b61461012e5780631b4622d61461016b5780632be8629914610194575b600080fd5b34801561010f57600080fd5b5061011861039b565b604051610125919061142f565b60405180910390f35b34801561013a57600080fd5b506101556004803603810190610150919061147b565b6103a1565b604051610162919061142f565b60405180910390f35b34801561017757600080fd5b50610192600480360381019061018d919061147b565b6103b8565b005b3480156101a057600080fd5b506101bb60048036038101906101b6919061147b565b610475565b005b6101c5610532565b005b3480156101d357600080fd5b506101dc6107a1565b005b3480156101ea57600080fd5b506101f3610866565b005b34801561020157600080fd5b5061020a610a3e565b604051610217919061142f565b60405180910390f35b34801561022c57600080fd5b50610235610a44565b60405161024291906114e9565b60405180910390f35b34801561025757600080fd5b50610272600480360381019061026d9190611554565b610a6a565b005b34801561028057600080fd5b50610289610b61565b005b34801561029757600080fd5b506102a0610be9565b6040516102ad9190611590565b60405180910390f35b3480156102c257600080fd5b506102cb610c12565b6040516102d8919061160a565b60405180910390f35b3480156102ed57600080fd5b506103086004803603810190610303919061147b565b610c38565b604051610315919061142f565b60405180910390f35b34801561032a57600080fd5b506103456004803603810190610340919061147b565b610c4f565b005b34801561035357600080fd5b5061036e60048036038101906103699190611651565b610ea0565b005b34801561037c57600080fd5b50610385610f98565b604051610392919061160a565b60405180910390f35b60025481565b6000600354826103b191906116ad565b9050919050565b6103c0610fbe565b73ffffffffffffffffffffffffffffffffffffffff166103de610be9565b73ffffffffffffffffffffffffffffffffffffffff1614610434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042b90611764565b60405180910390fd5b806003819055507fbdaa37e3f6679857d8c3e80d172bd45af732a8658cf1d690c81ca96f5a443b5b8160405161046a919061142f565b60405180910390a150565b61047d610fbe565b73ffffffffffffffffffffffffffffffffffffffff1661049b610be9565b73ffffffffffffffffffffffffffffffffffffffff16146104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e890611764565b60405180910390fd5b806002819055507fb0cc740bbbfcd5af22ee3956c6b44d2d6f499e2a86cb11d915fcce88dca2113a81604051610527919061142f565b60405180910390a150565b6000349050600061054282610c38565b905060008111610587576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057e906117d0565b60405180910390fd5b80600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105e39190611590565b60206040518083038186803b1580156105fb57600080fd5b505afa15801561060f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106339190611805565b1015610674576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066b9061187e565b60405180910390fd5b813373ffffffffffffffffffffffffffffffffffffffff163110156106ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c59061187e565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610736573d6000803e3d6000fd5b50610764600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383610fc6565b7ff695091b71a5c3ea41510251da89a66470bbcf1ee118f820a1bab8739e29ea50338260405161079592919061189e565b60405180910390a15050565b6107a9610fbe565b73ffffffffffffffffffffffffffffffffffffffff166107c7610be9565b73ffffffffffffffffffffffffffffffffffffffff161461081d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081490611764565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610863573d6000803e3d6000fd5b50565b61086e610fbe565b73ffffffffffffffffffffffffffffffffffffffff1661088c610be9565b73ffffffffffffffffffffffffffffffffffffffff16146108e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d990611764565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161097c9190611590565b60206040518083038186803b15801561099457600080fd5b505afa1580156109a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cc9190611805565b6040518363ffffffff1660e01b81526004016109e992919061189e565b602060405180830381600087803b158015610a0357600080fd5b505af1158015610a17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3b91906118ff565b50565b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a72610fbe565b73ffffffffffffffffffffffffffffffffffffffff16610a90610be9565b73ffffffffffffffffffffffffffffffffffffffff1614610ae6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610add90611764565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f43036333e58a6f9255617b54ec9f5825590c8ee695a222dc35e5001927f0715181604051610b56919061160a565b60405180910390a150565b610b69610fbe565b73ffffffffffffffffffffffffffffffffffffffff16610b87610be9565b73ffffffffffffffffffffffffffffffffffffffff1614610bdd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd490611764565b60405180910390fd5b610be7600061104c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060025482610c4891906116ad565b9050919050565b6000610c5a826103a1565b9050813373ffffffffffffffffffffffffffffffffffffffff16311015610cb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cad9061187e565b60405180910390fd5b60008111610cf9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf0906117d0565b60405180910390fd5b80600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d559190611590565b60206040518083038186803b158015610d6d57600080fd5b505afa158015610d81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da59190611805565b1015610de6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddd9061187e565b60405180910390fd5b610e36600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685611110565b610e63600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383610fc6565b7f5c0161fad3fa89cfebd4a74115d9f81661cdd1b9008d05a238ea9d65088e20643382604051610e9492919061189e565b60405180910390a15050565b610ea8610fbe565b73ffffffffffffffffffffffffffffffffffffffff16610ec6610be9565b73ffffffffffffffffffffffffffffffffffffffff1614610f1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1390611764565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f839061199e565b60405180910390fd5b610f958161104c565b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6110478363a9059cbb60e01b8484604051602401610fe592919061189e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611199565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611193846323b872dd60e01b858585604051602401611131939291906119be565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611199565b50505050565b60006111fb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166112609092919063ffffffff16565b905060008151111561125b578080602001905181019061121b91906118ff565b61125a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125190611a67565b60405180910390fd5b5b505050565b606061126f8484600085611278565b90509392505050565b6060824710156112bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b490611af9565b60405180910390fd5b6112c68561138c565b611305576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112fc90611b65565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161132e9190611bff565b60006040518083038185875af1925050503d806000811461136b576040519150601f19603f3d011682016040523d82523d6000602084013e611370565b606091505b50915091506113808282866113af565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b606083156113bf5782905061140f565b6000835111156113d25782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114069190611c6b565b60405180910390fd5b9392505050565b6000819050919050565b61142981611416565b82525050565b60006020820190506114446000830184611420565b92915050565b600080fd5b61145881611416565b811461146357600080fd5b50565b6000813590506114758161144f565b92915050565b6000602082840312156114915761149061144a565b5b600061149f84828501611466565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114d3826114a8565b9050919050565b6114e3816114c8565b82525050565b60006020820190506114fe60008301846114da565b92915050565b600061150f826114a8565b9050919050565b600061152182611504565b9050919050565b61153181611516565b811461153c57600080fd5b50565b60008135905061154e81611528565b92915050565b60006020828403121561156a5761156961144a565b5b60006115788482850161153f565b91505092915050565b61158a81611504565b82525050565b60006020820190506115a56000830184611581565b92915050565b6000819050919050565b60006115d06115cb6115c6846114a8565b6115ab565b6114a8565b9050919050565b60006115e2826115b5565b9050919050565b60006115f4826115d7565b9050919050565b611604816115e9565b82525050565b600060208201905061161f60008301846115fb565b92915050565b61162e81611504565b811461163957600080fd5b50565b60008135905061164b81611625565b92915050565b6000602082840312156116675761166661144a565b5b60006116758482850161163c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116b882611416565b91506116c383611416565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156116fc576116fb61167e565b5b828202905092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061174e602083611707565b915061175982611718565b602082019050919050565b6000602082019050818103600083015261177d81611741565b9050919050565b7f416d6f756e74206973207a65726f000000000000000000000000000000000000600082015250565b60006117ba600e83611707565b91506117c582611784565b602082019050919050565b600060208201905081810360008301526117e9816117ad565b9050919050565b6000815190506117ff8161144f565b92915050565b60006020828403121561181b5761181a61144a565b5b6000611829848285016117f0565b91505092915050565b7f496e73756666696369656e74206163636f756e742062616c616e636500000000600082015250565b6000611868601c83611707565b915061187382611832565b602082019050919050565b600060208201905081810360008301526118978161185b565b9050919050565b60006040820190506118b36000830185611581565b6118c06020830184611420565b9392505050565b60008115159050919050565b6118dc816118c7565b81146118e757600080fd5b50565b6000815190506118f9816118d3565b92915050565b6000602082840312156119155761191461144a565b5b6000611923848285016118ea565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611988602683611707565b91506119938261192c565b604082019050919050565b600060208201905081810360008301526119b78161197b565b9050919050565b60006060820190506119d36000830186611581565b6119e06020830185611581565b6119ed6040830184611420565b949350505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611a51602a83611707565b9150611a5c826119f5565b604082019050919050565b60006020820190508181036000830152611a8081611a44565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611ae3602683611707565b9150611aee82611a87565b604082019050919050565b60006020820190508181036000830152611b1281611ad6565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611b4f601d83611707565b9150611b5a82611b19565b602082019050919050565b60006020820190508181036000830152611b7e81611b42565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611bb9578082015181840152602081019050611b9e565b83811115611bc8576000848401525b50505050565b6000611bd982611b85565b611be38185611b90565b9350611bf3818560208601611b9b565b80840191505092915050565b6000611c0b8284611bce565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b6000611c3d82611c16565b611c478185611707565b9350611c57818560208601611b9b565b611c6081611c21565b840191505092915050565b60006020820190508181036000830152611c858184611c32565b90509291505056fea2646970667358221220beb61202bafb3fc1348697d22ec31cb9df97aaeb81f0fde3f3761753a49224fc64736f6c63430008090033";

type FLPCrowdSaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FLPCrowdSaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FLPCrowdSale__factory extends ContractFactory {
  constructor(...args: FLPCrowdSaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    bnb_rate: PromiseOrValue<BigNumberish>,
    usdt_rate: PromiseOrValue<BigNumberish>,
    wallet: PromiseOrValue<string>,
    icotoken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FLPCrowdSale> {
    return super.deploy(
      bnb_rate,
      usdt_rate,
      wallet,
      icotoken,
      overrides || {}
    ) as Promise<FLPCrowdSale>;
  }
  override getDeployTransaction(
    bnb_rate: PromiseOrValue<BigNumberish>,
    usdt_rate: PromiseOrValue<BigNumberish>,
    wallet: PromiseOrValue<string>,
    icotoken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      bnb_rate,
      usdt_rate,
      wallet,
      icotoken,
      overrides || {}
    );
  }
  override attach(address: string): FLPCrowdSale {
    return super.attach(address) as FLPCrowdSale;
  }
  override connect(signer: Signer): FLPCrowdSale__factory {
    return super.connect(signer) as FLPCrowdSale__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FLPCrowdSaleInterface {
    return new utils.Interface(_abi) as FLPCrowdSaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FLPCrowdSale {
    return new Contract(address, _abi, signerOrProvider) as FLPCrowdSale;
  }
}
